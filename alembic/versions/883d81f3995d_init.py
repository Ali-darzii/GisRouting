"""init

Revision ID: 883d81f3995d
Revises: 
Create Date: 2025-07-28 15:18:43.514398

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import geoalchemy2

# revision identifiers, used by Alembic.
revision: str = '883d81f3995d'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('edges',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('color', sa.String(length=50), nullable=True),
    sa.Column('geom', geoalchemy2.types.Geometry(geometry_type='LINESTRING', srid=4326), nullable=True),
    sa.Column('source', sa.Integer(), nullable=True),
    sa.Column('target', sa.Integer(), nullable=True),
    sa.Column('cost', sa.Float(), nullable=True),
    sa.Column('reverse_cost', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    
    # Only create index if it doesn't exist
    op.execute("""
        DO $$
        BEGIN
            IF NOT EXISTS (
                SELECT 1 FROM pg_indexes 
                WHERE indexname = 'idx_edges_geom' 
                AND tablename = 'edges'
            ) THEN
                CREATE INDEX idx_edges_geom ON edges USING gist (geom);
            END IF;
        END
        $$;
    """)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_edges_geom', table_name='edges', postgresql_using='gist')
    op.drop_table('edges')
    # ### end Alembic commands ###
